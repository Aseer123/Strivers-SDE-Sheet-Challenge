#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root) {

    
    vector<int> ans;
    if(root == NULL)
        return ans;
    
    map<int,int> mpp;

    queue<pair<TreeNode<int> *,int>> q;

    q.push({root,0});

    while(!q.empty()){

        auto it = q.front();
        q.pop();

        TreeNode<int> * node = it.first;
        int x = it.second;

        if (mpp.find(x) == mpp.end()) //to check if  map correspoinding  to the x is already there in map table or not if there it qill not update else , it will update
          mpp[x] = node->val;
        
            if(node->left)
                q.push({node->left,x-1});

            if(node->right)
                q.push({node->right,x+1});

    }
    
    for(auto p:mpp){
        ans.push_back(p.second);
    }

    return ans;

}













