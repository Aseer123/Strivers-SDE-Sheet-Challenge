/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        int maxi = INT_MIN;
        maxSumofNode(root,maxi);
        return maxi;
    }

    int maxSumofNode(TreeNode* node,int &maxi){
        
        if(node==NULL) return 0;

        int left = max(0,maxSumofNode(node->left,maxi));//we are avoiding -ve vallues so we take 0 if the -ve values are encountered as maximum never increases when -ve values are there
        int right = max(0,maxSumofNode(node->right,maxi));//we are avoiding -ve vallues so we take 0 if the -ve values are encountered as maximum never increases when -ve values are there

        maxi = max(maxi,node->val+left+right);

        return (node->val)+max(left,right);

    }

};
