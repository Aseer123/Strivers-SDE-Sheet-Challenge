
void merge(vector<int>& arr,int lo,int mid,int hi){
    
    vector<int> temp;
    
    int left = lo;
    int right = mid+1;
    
    while(left<= mid && right<=hi){
        if(arr[left] <= arr[right])
            {
                temp.push_back(arr[left]);
                left++;
            }
        else{
            temp.push_back(arr[right]);
            right++;
        }
    }
    
    while(left<=mid){
        temp.push_back(arr[left]);
        left++;
    }
    while(right<=hi){
        temp.push_back(arr[right]);
        right++;
    }   


    for(int i=lo;i<=hi;i++){
        arr[i] = temp[i-lo];
    }
    
}
    


void mergesort(vector<int>& arr, int lo, int hi){
    if(lo == hi) return;
    int mid = (lo+hi)/2;
    mergesort(arr,lo,mid);
    mergesort(arr,mid+1,hi);
    merge(arr,lo,mid,hi);
    
}


void mergeSort(vector<int>& arr, int l, int r) {
    
    mergesort(arr,0,arr.size()-1);
    
}
