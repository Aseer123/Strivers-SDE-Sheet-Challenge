//brute force ...
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();


        for(int i=0;i<m;i++){

            for(int j=0;j<n;j++){
                if(matrix[i][j] == target)
                    return true;
            }

        }
        return false;
    }
};

// optimised

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int m = matrix.size();
        int n = matrix[0].size();
        int lo = 0;
        int hi = m*n-1;
        
        
        while(lo <= hi)
        {

        int mid = (lo+hi)/2;

        //to access the element
        int x = mid/n;
        int y = mid%n;

        //binary search

        if(matrix[x][y] == target)
            return true;
        
        else if(target < matrix[x][y]) 
         hi = mid-1;   
        
        else
            lo = mid+1;

        }

        return false;
    }
};
