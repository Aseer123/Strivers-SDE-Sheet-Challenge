#include <bits/stdc++.h>

pair<int,int> missingAndRepeating(vector<int> &a, int n)
{
	
// 	long long Sn = (n*(n+1))/2;
// 	long long S2n = (n*(n+1)*(2*n+1))/6;

// 	long long S=0,S2=0;

// 	for(int i=0;i<n;i++){
// 		S += arr[i];
// 		S2 += (long long)arr[i] * (long long)arr[i];
// 	}

// 	long long val1 = S - Sn; //x-y
// 	long long val2 = S2 - S2n;
// 	val2 = val2/val1; //x^2- y^2 formula

// 	long long x = (val1+val2)/2;
// 	long long y = x-val1;

// 	return{(int)y,(int)x};

	int hash[n+1] = {0}; // hash array

    //update the hash array:
    for (int i = 0; i < n; i++) {
        hash[a[i]]++;
    }

    //Find the repeating and missing number:
    int repeating = -1, missing = -1;
    for (int i = 1; i <= n; i++) {
        if (hash[i] == 2) repeating = i;
        else if (hash[i] == 0) missing = i;

        if (repeating != -1 && missing != -1)
            break;
    }
    return {missing , repeating};

}

