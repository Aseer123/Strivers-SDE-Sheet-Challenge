#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


*********************************************************/



vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    
    vector<int> in,pre,po;

    stack<pair<BinaryTreeNode<int> * , int>> st;

    st.push({root,2});

    while(!st.empty()){
    auto it = st.top();
    st.pop();
    
    BinaryTreeNode<int> * node = it.first;
    
    if(it.second==1){
        in.push_back(node->data);
        it.second++;
        st.push(it);

        if(node->right != NULL){
            st.push({node->right,1});
        }

    }

    else if(it.second==2){
        pre.push_back(node->data);
        it.second++;
        st.push(it);

        if(node->left != NULL){
            st.push({node->left,1});
        }
    }

    else{
        po.push_back(node->data);
    }
  }

  return {in,pre,po};
}















